<?xml version="1.0" encoding="UTF-8"?>
<project name="network" basedir="." default="run">
    <condition property="windows">
        <os family="windows"/>
    </condition>
    <condition property="linux">
        <os family="unix"/>
    </condition>
    <target name="-winrun" if="windows" depends="jar">
        <java jar="build/jar/Network.jar" fork="true"/>
    </target>
    <target name="-linrun" if="linux" depends="jar">
        <exec executable="tput" outputproperty="columns">
            <arg value="cols"/>
        </exec>
        <java jar="build/jar/Dog.jar" fork="true">
            <arg value="${columns}"/>
        </java>
    </target>
    <target name="compile">
        <mkdir dir="build/classes"/>
        <javac srcdir="src" destdir="build/classes" debug="true" debuglevel="lines,vars,source"
               includeantruntime="false" encoding="UTF-8"/>
    </target>
    <target name="clean">
        <delete includeemptydirs="true">
            <fileset dir=".">
                <include name="*/"/>
                <exclude name=".idea/"/>
                <exclude name="src/"/>
                <exclude name=".gitignore"/>
                <exclude name="build.xml"/>
                <exclude name="LICENSE"/>
                <exclude name="MP-2018-1-p06.iml"/>
                <exclude name="README.md"/>
                <exclude name="README.pdf"/>
            </fileset>
        </delete>
    </target>
    <target name="jar" depends="compile">
        <mkdir dir="build/jar"/>
        <jar destfile="build/jar/Dog.jar" basedir="build/classes">
            <manifest>
                <attribute name="Main-Class" value="fciencias.myp.main.UseDog"/>
            </manifest>
        </jar>
    </target>
    <target name="run" depends="-winrun,-linrun"/>
    <target name="executable" depends="jar">
        <echo file="./dog">#!/usr/bin/env python
            import subprocess, os
            rows, columns = os.popen('stty size', 'r').read().split()
            if not os.path.isfile("build/jar/Network.jar"):
            subprocess.call(['ant', 'jar'])
            subprocess.call(['java', '-jar', 'build/jar/Dog.jar', columns])
        </echo>
        <chmod file="./dog" perm="+x"/>
    </target>
    <target name="doc">
        <mkdir dir="doc"/>
        <javadoc sourcepath="src" destdir="doc" access="private" windowtitle="Dog: State Design Pattern implementation"
                 doctitle="network" author="true" version="true"/>
    </target>
    <target name="all" depends="doc,executable"/>
</project>
